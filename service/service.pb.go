// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.0
// source: service.proto

package service

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Init_ACD int32

const (
	Init_V1 Init_ACD = 0
	Init_SQ Init_ACD = 1
)

// Enum value maps for Init_ACD.
var (
	Init_ACD_name = map[int32]string{
		0: "V1",
		1: "SQ",
	}
	Init_ACD_value = map[string]int32{
		"V1": 0,
		"SQ": 1,
	}
)

func (x Init_ACD) Enum() *Init_ACD {
	p := new(Init_ACD)
	*p = x
	return p
}

func (x Init_ACD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Init_ACD) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (Init_ACD) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x Init_ACD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Init_ACD.Descriptor instead.
func (Init_ACD) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1, 0}
}

type RequestMessage_Type int32

const (
	RequestMessage_PUT_TASK       RequestMessage_Type = 0
	RequestMessage_INIT           RequestMessage_Type = 1
	RequestMessage_SET_STATISTIC  RequestMessage_Type = 2
	RequestMessage_SET_ERROR_RATE RequestMessage_Type = 3
)

// Enum value maps for RequestMessage_Type.
var (
	RequestMessage_Type_name = map[int32]string{
		0: "PUT_TASK",
		1: "INIT",
		2: "SET_STATISTIC",
		3: "SET_ERROR_RATE",
	}
	RequestMessage_Type_value = map[string]int32{
		"PUT_TASK":       0,
		"INIT":           1,
		"SET_STATISTIC":  2,
		"SET_ERROR_RATE": 3,
	}
)

func (x RequestMessage_Type) Enum() *RequestMessage_Type {
	p := new(RequestMessage_Type)
	*p = x
	return p
}

func (x RequestMessage_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestMessage_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[1].Descriptor()
}

func (RequestMessage_Type) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[1]
}

func (x RequestMessage_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestMessage_Type.Descriptor instead.
func (RequestMessage_Type) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4, 0}
}

type TaskEvent_Type int32

const (
	TaskEvent_STARTED TaskEvent_Type = 0
)

// Enum value maps for TaskEvent_Type.
var (
	TaskEvent_Type_name = map[int32]string{
		0: "STARTED",
	}
	TaskEvent_Type_value = map[string]int32{
		"STARTED": 0,
	}
)

func (x TaskEvent_Type) Enum() *TaskEvent_Type {
	p := new(TaskEvent_Type)
	*p = x
	return p
}

func (x TaskEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[2].Descriptor()
}

func (TaskEvent_Type) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[2]
}

func (x TaskEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskEvent_Type.Descriptor instead.
func (TaskEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7, 0}
}

type ServiceMessage_Type int32

const (
	ServiceMessage_GET_TASK      ServiceMessage_Type = 0
	ServiceMessage_INIT_RESPONSE ServiceMessage_Type = 1
	ServiceMessage_TASK_EVENT    ServiceMessage_Type = 2
)

// Enum value maps for ServiceMessage_Type.
var (
	ServiceMessage_Type_name = map[int32]string{
		0: "GET_TASK",
		1: "INIT_RESPONSE",
		2: "TASK_EVENT",
	}
	ServiceMessage_Type_value = map[string]int32{
		"GET_TASK":      0,
		"INIT_RESPONSE": 1,
		"TASK_EVENT":    2,
	}
)

func (x ServiceMessage_Type) Enum() *ServiceMessage_Type {
	p := new(ServiceMessage_Type)
	*p = x
	return p
}

func (x ServiceMessage_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceMessage_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[3].Descriptor()
}

func (ServiceMessage_Type) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[3]
}

func (x ServiceMessage_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceMessage_Type.Descriptor instead.
func (ServiceMessage_Type) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8, 0}
}

type PutTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomData []byte `protobuf:"bytes,1,opt,name=customData,proto3" json:"customData,omitempty"`
	TaskUUID   string `protobuf:"bytes,2,opt,name=taskUUID,proto3" json:"taskUUID,omitempty"`
}

func (x *PutTask) Reset() {
	*x = PutTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutTask) ProtoMessage() {}

func (x *PutTask) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutTask.ProtoReflect.Descriptor instead.
func (*PutTask) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *PutTask) GetCustomData() []byte {
	if x != nil {
		return x.CustomData
	}
	return nil
}

func (x *PutTask) GetTaskUUID() string {
	if x != nil {
		return x.TaskUUID
	}
	return ""
}

type Init struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitStat  *Statistic `protobuf:"bytes,1,opt,name=init_stat,json=initStat,proto3" json:"init_stat,omitempty"`
	AccountId int32      `protobuf:"zigzag32,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ApiKey    string     `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Types that are assignable to Rule:
	//	*Init_RuleId
	//	*Init_RuleName
	Rule             isInit_Rule `protobuf_oneof:"rule"`
	ReferenceIp      string      `protobuf:"bytes,5,opt,name=reference_ip,json=referenceIp,proto3" json:"reference_ip,omitempty"`
	QueueId          int32       `protobuf:"zigzag32,6,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	SessionId        string      `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                          // optional. use to continue processing after disconnect
	MaximumErrorRate float64     `protobuf:"fixed64,12,opt,name=maximum_error_rate,json=maximumErrorRate,proto3" json:"maximum_error_rate,omitempty"` // default: 0.02
	AcdVersion       Init_ACD    `protobuf:"varint,15,opt,name=acd_version,json=acdVersion,proto3,enum=Init_ACD" json:"acd_version,omitempty"`
	// Types that are assignable to Application:
	//	*Init_ApplicationId
	//	*Init_ApplicationName
	Application    isInit_Application `protobuf_oneof:"application"`
	TaskMultiplier *TaskMultiplier    `protobuf:"bytes,17,opt,name=task_multiplier,json=taskMultiplier,proto3" json:"task_multiplier,omitempty"` //for progressive
}

func (x *Init) Reset() {
	*x = Init{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Init) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Init) ProtoMessage() {}

func (x *Init) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Init.ProtoReflect.Descriptor instead.
func (*Init) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *Init) GetInitStat() *Statistic {
	if x != nil {
		return x.InitStat
	}
	return nil
}

func (x *Init) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Init) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (m *Init) GetRule() isInit_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (x *Init) GetRuleId() int32 {
	if x, ok := x.GetRule().(*Init_RuleId); ok {
		return x.RuleId
	}
	return 0
}

func (x *Init) GetRuleName() string {
	if x, ok := x.GetRule().(*Init_RuleName); ok {
		return x.RuleName
	}
	return ""
}

func (x *Init) GetReferenceIp() string {
	if x != nil {
		return x.ReferenceIp
	}
	return ""
}

func (x *Init) GetQueueId() int32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *Init) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Init) GetMaximumErrorRate() float64 {
	if x != nil {
		return x.MaximumErrorRate
	}
	return 0
}

func (x *Init) GetAcdVersion() Init_ACD {
	if x != nil {
		return x.AcdVersion
	}
	return Init_V1
}

func (m *Init) GetApplication() isInit_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (x *Init) GetApplicationId() int32 {
	if x, ok := x.GetApplication().(*Init_ApplicationId); ok {
		return x.ApplicationId
	}
	return 0
}

func (x *Init) GetApplicationName() string {
	if x, ok := x.GetApplication().(*Init_ApplicationName); ok {
		return x.ApplicationName
	}
	return ""
}

func (x *Init) GetTaskMultiplier() *TaskMultiplier {
	if x != nil {
		return x.TaskMultiplier
	}
	return nil
}

type isInit_Rule interface {
	isInit_Rule()
}

type Init_RuleId struct {
	RuleId int32 `protobuf:"zigzag32,4,opt,name=rule_id,json=ruleId,proto3,oneof"`
}

type Init_RuleName struct {
	RuleName string `protobuf:"bytes,18,opt,name=rule_name,json=ruleName,proto3,oneof"` // Rule name available only with application
}

func (*Init_RuleId) isInit_Rule() {}

func (*Init_RuleName) isInit_Rule() {}

type isInit_Application interface {
	isInit_Application()
}

type Init_ApplicationId struct {
	ApplicationId int32 `protobuf:"zigzag32,16,opt,name=application_id,json=applicationId,proto3,oneof"` // for working with SQ
}

type Init_ApplicationName struct {
	ApplicationName string `protobuf:"bytes,19,opt,name=application_name,json=applicationName,proto3,oneof"`
}

func (*Init_ApplicationId) isInit_Application() {}

func (*Init_ApplicationName) isInit_Application() {}

type Statistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvgTimeTalkSec    float64 `protobuf:"fixed64,1,opt,name=avgTimeTalkSec,proto3" json:"avgTimeTalkSec,omitempty"`
	PercentSuccessful float64 `protobuf:"fixed64,2,opt,name=percentSuccessful,proto3" json:"percentSuccessful,omitempty"`
	AvgDialTimeSec    float64 `protobuf:"fixed64,3,opt,name=avgDialTimeSec,proto3" json:"avgDialTimeSec,omitempty"`
	AvgTotalTimeSec   float64 `protobuf:"fixed64,4,opt,name=avgTotalTimeSec,proto3" json:"avgTotalTimeSec,omitempty"`
}

func (x *Statistic) Reset() {
	*x = Statistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistic) ProtoMessage() {}

func (x *Statistic) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistic.ProtoReflect.Descriptor instead.
func (*Statistic) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *Statistic) GetAvgTimeTalkSec() float64 {
	if x != nil {
		return x.AvgTimeTalkSec
	}
	return 0
}

func (x *Statistic) GetPercentSuccessful() float64 {
	if x != nil {
		return x.PercentSuccessful
	}
	return 0
}

func (x *Statistic) GetAvgDialTimeSec() float64 {
	if x != nil {
		return x.AvgDialTimeSec
	}
	return 0
}

func (x *Statistic) GetAvgTotalTimeSec() float64 {
	if x != nil {
		return x.AvgTotalTimeSec
	}
	return 0
}

type ErrRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaximumErrorRate float64 `protobuf:"fixed64,1,opt,name=maximum_error_rate,json=maximumErrorRate,proto3" json:"maximum_error_rate,omitempty"`
}

func (x *ErrRate) Reset() {
	*x = ErrRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrRate) ProtoMessage() {}

func (x *ErrRate) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrRate.ProtoReflect.Descriptor instead.
func (*ErrRate) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *ErrRate) GetMaximumErrorRate() float64 {
	if x != nil {
		return x.MaximumErrorRate
	}
	return 0
}

type RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      RequestMessage_Type `protobuf:"varint,1,opt,name=type,proto3,enum=RequestMessage_Type" json:"type,omitempty"`
	Task      *PutTask            `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Init      *Init               `protobuf:"bytes,3,opt,name=init,proto3" json:"init,omitempty"`
	Statistic *Statistic          `protobuf:"bytes,4,opt,name=statistic,proto3" json:"statistic,omitempty"`
	ErrRate   *ErrRate            `protobuf:"bytes,5,opt,name=errRate,proto3" json:"errRate,omitempty"`
}

func (x *RequestMessage) Reset() {
	*x = RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMessage) ProtoMessage() {}

func (x *RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMessage.ProtoReflect.Descriptor instead.
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *RequestMessage) GetType() RequestMessage_Type {
	if x != nil {
		return x.Type
	}
	return RequestMessage_PUT_TASK
}

func (x *RequestMessage) GetTask() *PutTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *RequestMessage) GetInit() *Init {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *RequestMessage) GetStatistic() *Statistic {
	if x != nil {
		return x.Statistic
	}
	return nil
}

func (x *RequestMessage) GetErrRate() *ErrRate {
	if x != nil {
		return x.ErrRate
	}
	return nil
}

type GetTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"zigzag32,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetTask) Reset() {
	*x = GetTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTask) ProtoMessage() {}

func (x *GetTask) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTask.ProtoReflect.Descriptor instead.
func (*GetTask) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetTask) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *InitResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type TaskEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUUID string         `protobuf:"bytes,1,opt,name=taskUUID,proto3" json:"taskUUID,omitempty"`
	Type     TaskEvent_Type `protobuf:"varint,2,opt,name=type,proto3,enum=TaskEvent_Type" json:"type,omitempty"`
}

func (x *TaskEvent) Reset() {
	*x = TaskEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskEvent) ProtoMessage() {}

func (x *TaskEvent) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskEvent.ProtoReflect.Descriptor instead.
func (*TaskEvent) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *TaskEvent) GetTaskUUID() string {
	if x != nil {
		return x.TaskUUID
	}
	return ""
}

func (x *TaskEvent) GetType() TaskEvent_Type {
	if x != nil {
		return x.Type
	}
	return TaskEvent_STARTED
}

type ServiceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ServiceMessage_Type `protobuf:"varint,1,opt,name=type,proto3,enum=ServiceMessage_Type" json:"type,omitempty"`
	Request *GetTask            `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Init    *InitResponse       `protobuf:"bytes,3,opt,name=init,proto3" json:"init,omitempty"`
	Event   *TaskEvent          `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ServiceMessage) Reset() {
	*x = ServiceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMessage) ProtoMessage() {}

func (x *ServiceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMessage.ProtoReflect.Descriptor instead.
func (*ServiceMessage) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (x *ServiceMessage) GetType() ServiceMessage_Type {
	if x != nil {
		return x.Type
	}
	return ServiceMessage_GET_TASK
}

func (x *ServiceMessage) GetRequest() *GetTask {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ServiceMessage) GetInit() *InitResponse {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *ServiceMessage) GetEvent() *TaskEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type TaskMultiplier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Multiplier float32 `protobuf:"fixed32,1,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
}

func (x *TaskMultiplier) Reset() {
	*x = TaskMultiplier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskMultiplier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMultiplier) ProtoMessage() {}

func (x *TaskMultiplier) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMultiplier.ProtoReflect.Descriptor instead.
func (*TaskMultiplier) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9}
}

func (x *TaskMultiplier) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x45, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x22, 0x96, 0x04, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12,
	0x27, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x08,
	0x69, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x19, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x11, 0x48, 0x00, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x61, 0x63, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x2e, 0x41, 0x43, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x48, 0x01, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x22, 0x15, 0x0a, 0x03, 0x41, 0x43, 0x44, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x31, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x53, 0x51, 0x10, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xb3, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x26, 0x0a,
	0x0e, 0x61, 0x76, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x76, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61,
	0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x67, 0x44, 0x69, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x76, 0x67,
	0x44, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x76, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x76, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x63, 0x22, 0x37, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x22, 0x88,
	0x02, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x75, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x19, 0x0a, 0x04, 0x69, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x04,
	0x69, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x22,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x45, 0x72, 0x72, 0x52, 0x61, 0x74, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x22, 0x45, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55,
	0x54, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x53,
	0x54, 0x49, 0x43, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x54, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x10, 0x03, 0x22, 0x1f, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x0c, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x09, 0x54, 0x61, 0x73,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x13, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x22, 0xdc, 0x01, 0x0a,
	0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x37, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x45,
	0x54, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x49, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x30, 0x0a, 0x0e, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x32, 0x6e, 0x0a,
	0x03, 0x50, 0x44, 0x53, 0x12, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x0f, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x12, 0x0f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_service_proto_goTypes = []interface{}{
	(Init_ACD)(0),            // 0: Init.ACD
	(RequestMessage_Type)(0), // 1: RequestMessage.Type
	(TaskEvent_Type)(0),      // 2: TaskEvent.Type
	(ServiceMessage_Type)(0), // 3: ServiceMessage.Type
	(*PutTask)(nil),          // 4: PutTask
	(*Init)(nil),             // 5: Init
	(*Statistic)(nil),        // 6: Statistic
	(*ErrRate)(nil),          // 7: ErrRate
	(*RequestMessage)(nil),   // 8: RequestMessage
	(*GetTask)(nil),          // 9: GetTask
	(*InitResponse)(nil),     // 10: InitResponse
	(*TaskEvent)(nil),        // 11: TaskEvent
	(*ServiceMessage)(nil),   // 12: ServiceMessage
	(*TaskMultiplier)(nil),   // 13: TaskMultiplier
}
var file_service_proto_depIdxs = []int32{
	6,  // 0: Init.init_stat:type_name -> Statistic
	0,  // 1: Init.acd_version:type_name -> Init.ACD
	13, // 2: Init.task_multiplier:type_name -> TaskMultiplier
	1,  // 3: RequestMessage.type:type_name -> RequestMessage.Type
	4,  // 4: RequestMessage.task:type_name -> PutTask
	5,  // 5: RequestMessage.init:type_name -> Init
	6,  // 6: RequestMessage.statistic:type_name -> Statistic
	7,  // 7: RequestMessage.errRate:type_name -> ErrRate
	2,  // 8: TaskEvent.type:type_name -> TaskEvent.Type
	3,  // 9: ServiceMessage.type:type_name -> ServiceMessage.Type
	9,  // 10: ServiceMessage.request:type_name -> GetTask
	10, // 11: ServiceMessage.init:type_name -> InitResponse
	11, // 12: ServiceMessage.event:type_name -> TaskEvent
	8,  // 13: PDS.Start:input_type -> RequestMessage
	8,  // 14: PDS.StartProgressive:input_type -> RequestMessage
	12, // 15: PDS.Start:output_type -> ServiceMessage
	12, // 16: PDS.StartProgressive:output_type -> ServiceMessage
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Init); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskMultiplier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Init_RuleId)(nil),
		(*Init_RuleName)(nil),
		(*Init_ApplicationId)(nil),
		(*Init_ApplicationName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
